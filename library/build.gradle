apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'bintray-release'
apply plugin: 'kotlin-android'

def versionMajor = 0
def versionMinor = 2
def versionPatch = 0

// Maven GAV
def libraryGroupId = 'com.devbrackets.android'
def libraryBaseName = 'androidmarkup'
def libraryVersion = "${versionMajor}.${versionMinor}.${versionPatch}" // release version

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // Kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile 'com.android.support:appcompat-v7:23.3.0'

    //Markdown (CommonMark Spec)
    compile 'com.atlassian.commonmark:commonmark:0.4.1'


    // Test dependencies below
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.android.support.test:runner:0.5'
=======
    compile 'com.android.support:appcompat-v7:23.3.0'
>>>>>>> Temporary merge branch 2
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.3'

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 23

        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    sourceSets {
        defaultConfig {
            testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        }
        main {
            java.srcDirs = ['src/main/kotlin']
        }
        androidTest {
            java.srcDirs = ['src/androidTest/kotlin']
        }
    }
}

// ======== MAVEN DEPLOY to local cache or nexus repo (to make accessible to local projects) (command: ./gradlew clean aRel uploadArchives) ========
uploadArchives {
    repositories {
        // deploy to local
        mavenDeployer {
            repository (url: "file://${System.env.HOME}/.m2/repository/")
            pom.groupId = libraryGroupId
            pom.artifactId = libraryBaseName
            pom.version = libraryVersion
            pom.packaging = 'aar'
            uniqueVersion = false
        }
    }
}

// ======= BINTRAY DEPLOY (command: $ ./gradlew clean build bintrayUpload -PbintrayUser=BINTRAY_USERNAME -PbintrayKey=BINTRAY_KEY -PdryRun=false -x mavenAndroidJavadocs) ====
// "-x mavenAndroidJavadocs" added because this library is in Kotlin (see https://github.com/novoda/bintray-release/issues/71)
publish {
    groupId = libraryGroupId
    artifactId = libraryBaseName
    uploadName = 'AndroidMarkup'
    version = libraryVersion
    autoPublish = false
    dryRun = false
}